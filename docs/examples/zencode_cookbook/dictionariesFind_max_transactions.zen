rule check version 1.0.0
Scenario ecdh: sign the result

# Import the Authority keypair
Given that I am known as 'Authority'
and I have my 'keypair'

# Here we load the two dictionaries and import their data
# and we also load a number named 'timestamp': there are also numbers with the same
# inside the dictionaries, but those are referred to differently
Given I have a 'string dictionary' named 'ABC-TransactionListSecondBatch'
and I have a 'string dictionary' named 'ABC-TransactionListFirstBatch'
and I have a 'number' named 'referenceTimestamp'

# In this statement we find the last (most recent) transaction in the dictionary 
# "ABC-TransactionListSecondBatch" by finding the element that contains
# the number 'timestamp' with the highest value in that dictionary.
# We also save the value of this 'timestamp' in an object that we call "Theta"
When I find the max value 'timestamp' for dictionaries in 'ABC-TransactionListSecondBatch'
and I rename the 'max value' to 'Theta'

# Here we compute the sum of the "TransactionValue" numbers, 
# in the elements of the dictionary "ABC-TransactionListFirstBatch", 
# that have a 'timestamp' higher than "Theta". 
# We also rename the sum into "sumOfTransactionsValueFirstBatchAfterTheta"
When I create the sum value 'TransactionValue' for dictionaries in 'ABC-TransactionListFirstBatch' where 'timestamp' > 'Theta'
and I rename the 'sum value' to 'sumOfTransactionsValueFirstBatchAfterTheta'

# Here we do something similar to the statements above, but using the numbers
# named "TransferredProductAmount" in the same dictionary 
# We rename the sum to "sumOfTransactionsValueFirstBatchAfterTheta"
When I create the sum value 'TransferredProductAmount' for dictionaries in 'ABC-TransactionListFirstBatch' where 'timestamp' > 'Theta'
and I rename the 'sum value' to 'TotalTransferredProductAmountFirstBatchAfterTheta'

# In the statements below we are looking for the transaction(s) happened at time "Theta", 
# in both the dictionaries, and saving their "TransactionValue" into a new object (and renaming the object)
When I find the 'TransactionValue' for dictionaries in 'ABC-TransactionListSecondBatch' where 'timestamp' = 'Theta'
and I rename the 'TransactionValue' to 'TransactionValueSecondBatchAtTheta'
When I find the 'TransferredProductAmount' for dictionaries in 'ABC-TransactionListSecondBatch' where 'timestamp' = 'Theta'
and I rename the 'TransferredProductAmount' to 'TransferredProductAmountSecondBatchAtTheta'

# sum the last with the new aggregated values from recent transactions
When I create the result of 'sumOfTransactionsValueFirstBatchAfterTheta' + 'TransactionValueSecondBatchAtTheta'
and I rename the 'result' to 'SumTransactionValueAfterTheta'
When I create the result of 'TotalTransferredProductAmountFirstBatchAfterTheta' + 'TransferredProductAmountSecondBatchAtTheta'
and I rename the 'result' to 'SumTransactionProductAmountAfterTheta'

# create the entry for the new sum
When I create the 'number dictionary'
When I move 'SumTransactionValueAfterTheta' in 'number dictionary'
When I move 'SumTransactionProductAmountAfterTheta' in 'number dictionary'
and debug
When I move 'TransactionValueSecondBatchAtTheta' in 'number dictionary'
# When I move 'TransferredProductAmountSecondBatchAtTheta' in 'number dictionary'
When I move 'referenceTimestamp' in 'number dictionary'
# When I move 'Theta' in 'number dictionary'
and I rename the 'number dictionary' to 'ABC-TransactionsAfterTheta'

# sign the new entry
When I create the signature of 'ABC-TransactionsAfterTheta'
and I rename the 'signature' to 'ABC-TransactionsAfterTheta.signature'

# print the result
Then print the 'ABC-TransactionsAfterTheta'
and print the 'ABC-TransactionsAfterTheta.signature'
and print the 'Theta'
and print the 'TransactionValueSecondBatchAtTheta'
and print the 'TransferredProductAmountSecondBatchAtTheta'
